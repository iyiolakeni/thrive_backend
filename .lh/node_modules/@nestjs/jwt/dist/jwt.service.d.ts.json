{
    "sourceFile": "node_modules/@nestjs/jwt/dist/jwt.service.d.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1722798060727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1722798060727,
            "name": "Commit-0",
            "content": "/// <reference types=\"node\" />\nimport * as jwt from 'jsonwebtoken';\nimport { JwtModuleOptions, JwtSignOptions, JwtVerifyOptions } from './interfaces';\n\nexport declare class JwtService {\n    private readonly options;\n    private readonly logger;\n    constructor(options?: JwtModuleOptions);\n    sign(payload: string, options?: Omit<JwtSignOptions, keyof jwt.SignOptions>): string;\n    sign(payload: Buffer | object, options?: JwtSignOptions): string;\n    signAsync(payload: string, options?: Omit<JwtSignOptions, keyof jwt.SignOptions>): Promise<string>;\n    signAsync(payload: Buffer | object, options?: JwtSignOptions): Promise<string>;\n    verify<T extends object = any>(token: string, options?: JwtVerifyOptions): T;\n    verifyAsync<T extends object = any>(token: string, options?: JwtVerifyOptions): Promise<T>;\n    decode<T = any>(token: string, options?: jwt.DecodeOptions): T;\n    private mergeJwtOptions;\n    private overrideSecretFromOptions;\n    private getSecretKey;\n}\n"
        }
    ]
}