{
    "sourceFile": "src/auth/jwt.strategy.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722786908458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722786925613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// src/auth/jwt.strategy.ts\r\n import { Injectable } from '@nestjs/common';\r\n import { PassportStrategy } from '@nestjs/passport';\r\n import { ExtractJwt, Strategy } from 'passport-jwt';\r\n \r\n@@ -8,9 +7,9 @@\n   constructor() {\r\n     super({\r\n       jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n       ignoreExpiration: false,\r\n-      secretOrKey: 'your_jwt_secret', // Replace with your secret\r\n+      secretOrKey: 'your_jwt_secret',\r\n     });\r\n   }\r\n \r\n   async validate(payload: any) {\r\n"
                },
                {
                    "date": 1722795818710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { ExtractJwt, Strategy } from 'passport-jwt';\r\n \r\n @Injectable()\r\n export class JwtStrategy extends PassportStrategy(Strategy) {\r\n-  constructor(configService) {\r\n+  constructor(configService:) {\r\n     super({\r\n       jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n       ignoreExpiration: false,\r\n       secretOrKey: 'your_jwt_secret',\r\n"
                },
                {
                    "date": 1722855392158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import { Injectable } from '@nestjs/common';\r\n+import { ConfigService } from '@nestjs/config';\r\n+import { PassportStrategy } from '@nestjs/passport';\r\n+import { ExtractJwt, Strategy } from 'passport-jwt';\r\n+\r\n+@Injectable()\r\n+export class JwtStrategy extends PassportStrategy(Strategy) {\r\n+  constructor(private configService: ConfigService) {\r\n+    super({\r\n+      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n+      ignoreExpiration: false,\r\n+      secretOrKey: configService.get<string>('JWT_SECRET'),\r\n+    });\r\n+  }\r\n+\r\n+  async validate(payload: any) {\r\n+    \r\n+    return { id: payload.sub, email: payload.email };\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1722786908458,
            "name": "Commit-0",
            "content": "// src/auth/jwt.strategy.ts\r\nimport { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor() {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: 'your_jwt_secret', // Replace with your secret\r\n    });\r\n  }\r\n\r\n  async validate(payload: any) {\r\n    return { userId: payload.sub, email: payload.email };\r\n  }\r\n}\r\n"
        }
    ]
}