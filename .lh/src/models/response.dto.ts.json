{
    "sourceFile": "src/models/response.dto.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1749681744458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749682003243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,10 +87,17 @@\n }\r\n \r\n export class InvalidCredentialsResponse extends ErrorResponse {\r\n \tuserId: string;\r\n+\tmessage: string;\r\n+\terror: string;\r\n+\tstatusCode: number;\r\n \tconstructor(message = \"Invalid credentials\", error = \"Unauthorized\") {\r\n \t\tsuper(message, error, 401);\r\n+\t\tthis.userId = \"\"; // This can be set later when the user ID is known\r\n+\t\tthis.message = message;\r\n+\t\tthis.error = error;\r\n+\t\tthis.statusCode = 401;\r\n \t}\r\n }\r\n \r\n export class UnauthorizedResponse extends ErrorResponse {\r\n"
                },
                {
                    "date": 1749682969585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,13 +71,20 @@\n export class ErrorResponse implements BaseResponse {\r\n \tstatusCode: number;\r\n \tmessage: string;\r\n \terror: string;\r\n+\tuserId?: string;\r\n \r\n-\tconstructor(message: string, error: string, statusCode = 500) {\r\n+\tconstructor(\r\n+\t\tmessage: string,\r\n+\t\terror: string,\r\n+\t\tstatusCode = 500,\r\n+\t\tuserId?: string\r\n+\t) {\r\n \t\tthis.statusCode = statusCode;\r\n \t\tthis.message = message;\r\n \t\tthis.error = error;\r\n+\t\tthis.userId = userId;\r\n \t}\r\n }\r\n \r\n export class BadRequestResponse extends ErrorResponse {\r\n@@ -86,18 +93,13 @@\n \t}\r\n }\r\n \r\n export class InvalidCredentialsResponse extends ErrorResponse {\r\n-\tuserId: string;\r\n-\tmessage: string;\r\n-\terror: string;\r\n-\tstatusCode: number;\r\n-\tconstructor(message = \"Invalid credentials\", error = \"Unauthorized\") {\r\n+\tuserId?: string;\r\n+\tconstructor(message = \"Invalid credentials\", error = \"Unauthorized\", userId) {\r\n \t\tsuper(message, error, 401);\r\n-\t\tthis.userId = \"\"; // This can be set later when the user ID is known\r\n-\t\tthis.message = message;\r\n-\t\tthis.error = error;\r\n-\t\tthis.statusCode = 401;\r\n+\t\tthis.userId = userId;\r\n+\t\tthis.statusCode = 401; // Ensure status code is set to 401 Unauthorized\r\n \t}\r\n }\r\n \r\n export class UnauthorizedResponse extends ErrorResponse {\r\n"
                },
                {
                    "date": 1749832174495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,33 @@\n \t\tthis.data = data;\r\n \t}\r\n }\r\n \r\n+export class SearchResponse<T> extends DataResponse<T[]> {\r\n+\tmeta: {\r\n+\t\ttotal: number;\r\n+\t\tpage: number;\r\n+\t\tlimit: number;\r\n+\t\ttotalPages: number;\r\n+\t};\r\n+\r\n+\tconstructor(\r\n+\t\tdata: T[],\r\n+\t\tmeta: {\r\n+\t\t\ttotal: number;\r\n+\t\t\tpage: number;\r\n+\t\t\tlimit: number;\r\n+\t\t\ttotalPages: number;\r\n+\t\t},\r\n+\t\tmessage = \"Data retrieved successfully\",\r\n+\t\tstatusCode = 200\r\n+\t) {\r\n+\t\tsuper(data, message, 200);\r\n+\t\tthis.meta = meta;\r\n+\t\tthis.statusCode = 200; // Ensure status code is set to 200 OK\r\n+\t}\r\n+}\r\n+\r\n export class CreatedResponse<T> extends DataResponse<T> {\r\n \tconstructor(data: T, message = \"Resource created successfully\") {\r\n \t\tsuper(data, message, 201);\r\n \t}\r\n"
                }
            ],
            "date": 1749681744458,
            "name": "Commit-0",
            "content": "// Base response interface\r\nexport interface BaseResponse {\r\n\tstatusCode: number;\r\n\tmessage: string;\r\n}\r\n\r\n// Success responses\r\nexport class SuccessResponse implements BaseResponse {\r\n\tstatusCode: number;\r\n\tmessage: string;\r\n\r\n\tconstructor(message = \"Operation successful\", statusCode = 200) {\r\n\t\tthis.statusCode = statusCode;\r\n\t\tthis.message = message;\r\n\t}\r\n}\r\n\r\nexport class DataResponse<T> extends SuccessResponse {\r\n\tdata: T;\r\n\r\n\tconstructor(data: T, message = \"Operation successful\", statusCode = 200) {\r\n\t\tsuper(message, statusCode);\r\n\t\tthis.data = data;\r\n\t}\r\n}\r\n\r\nexport class CreatedResponse<T> extends DataResponse<T> {\r\n\tconstructor(data: T, message = \"Resource created successfully\") {\r\n\t\tsuper(data, message, 201);\r\n\t}\r\n}\r\n\r\nexport class LoginResponse extends SuccessResponse {\r\n\taccess_token: string;\r\n\r\n\tconstructor(accessToken: string, message = \"Login successful\") {\r\n\t\tsuper(message, 200);\r\n\t\tthis.access_token = accessToken;\r\n\t}\r\n}\r\n\r\n// Paginated response for lists\r\nexport class PaginatedResponse<T> extends SuccessResponse {\r\n\tdata: T[];\r\n\tmeta: {\r\n\t\ttotal: number;\r\n\t\tpage: number;\r\n\t\tlimit: number;\r\n\t\ttotalPages: number;\r\n\t};\r\n\r\n\tconstructor(\r\n\t\tdata: T[],\r\n\t\ttotal: number,\r\n\t\tpage: number,\r\n\t\tlimit: number,\r\n\t\tmessage = \"Data retrieved successfully\"\r\n\t) {\r\n\t\tsuper(message, 200);\r\n\t\tthis.data = data;\r\n\t\tthis.meta = {\r\n\t\t\ttotal,\r\n\t\t\tpage,\r\n\t\t\tlimit,\r\n\t\t\ttotalPages: Math.ceil(total / limit),\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Error responses\r\nexport class ErrorResponse implements BaseResponse {\r\n\tstatusCode: number;\r\n\tmessage: string;\r\n\terror: string;\r\n\r\n\tconstructor(message: string, error: string, statusCode = 500) {\r\n\t\tthis.statusCode = statusCode;\r\n\t\tthis.message = message;\r\n\t\tthis.error = error;\r\n\t}\r\n}\r\n\r\nexport class BadRequestResponse extends ErrorResponse {\r\n\tconstructor(message = \"Invalid input\", error = \"Bad Request\") {\r\n\t\tsuper(message, error, 400);\r\n\t}\r\n}\r\n\r\nexport class InvalidCredentialsResponse extends ErrorResponse {\r\n\tuserId: string;\r\n\tconstructor(message = \"Invalid credentials\", error = \"Unauthorized\") {\r\n\t\tsuper(message, error, 401);\r\n\t}\r\n}\r\n\r\nexport class UnauthorizedResponse extends ErrorResponse {\r\n\tconstructor(message = \"Unauthorized access\", error = \"Unauthorized\") {\r\n\t\tsuper(message, error, 401);\r\n\t}\r\n}\r\n\r\nexport class ForbiddenResponse extends ErrorResponse {\r\n\tconstructor(message = \"Access denied\", error = \"Forbidden\") {\r\n\t\tsuper(message, error, 403);\r\n\t}\r\n}\r\n\r\nexport class NotFoundResponse extends ErrorResponse {\r\n\tconstructor(message = \"Resource not found\", error = \"Not Found\") {\r\n\t\tsuper(message, error, 404);\r\n\t}\r\n}\r\n\r\nexport class ConflictResponse extends ErrorResponse {\r\n\tconstructor(message = \"Resource already exists\", error = \"Conflict\") {\r\n\t\tsuper(message, error, 409);\r\n\t}\r\n}\r\n"
        }
    ]
}