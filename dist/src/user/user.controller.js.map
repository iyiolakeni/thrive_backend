{"version":3,"file":"user.controller.js","sourceRoot":"","sources":["../../../src/user/user.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA4I;AAC5I,iDAA6C;AAC7C,6CAAyD;AACzD,2EAAsE;AAEtE,2EAAsE;AACtE,2DAAuD;AAKhD,IAAM,cAAc,GAApB,MAAM,cAAc;IACvB,YACqB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC3C,CAAC;IAGG,AAAN,KAAK,CAAC,MAAM,CAAS,aAA4B;QAC7C,IAAG,CAAC;YACA,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAClD,CAAC;QACD,OAAO,KAAK,EAAC,CAAC;YACV,IAAI,KAAK,YAAY,0BAAiB,EAAE,CAAC;gBACrC,MAAM,IAAI,sBAAa,CAAC,yBAAyB,EAAE,mBAAU,CAAC,QAAQ,CAAC,CAAC;YAC1E,CAAC;YACD,MAAM,KAAK,CAAC;QACd,CAAC;IACT,CAAC;IAGD,WAAW;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAKK,AAAN,KAAK,CAAC,OAAO,CAAoB,QAAgB;QAC7C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAMK,AAAN,KAAK,CAAC,UAAU,CAAoB,QAAgB,EAAU,aAA4B;QACtF,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IAChE,CAAC;IAKK,AAAN,KAAK,CAAC,UAAU,CAAoB,QAAgB;QAChD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;IAChD,CAAC;CAEJ,CAAA;AA7CY,wCAAc;AAMjB;IADL,IAAA,aAAI,GAAE;IACO,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAAgB,+BAAa;;4CAUhD;AAGD;IADC,IAAA,YAAG,GAAE;;;;iDAGL;AAKK;IAHL,IAAA,kBAAS,EAAC,6BAAY,CAAC;IACvB,IAAA,uBAAa,GAAE;IACf,IAAA,YAAG,EAAC,WAAW,CAAC;IACF,WAAA,IAAA,cAAK,EAAC,UAAU,CAAC,CAAA;;;;6CAE/B;AAMK;IAJL,IAAA,cAAK,EAAC,WAAW,CAAC;IAClB,IAAA,kBAAS,EAAC,6BAAY,CAAC;IACvB,IAAA,uBAAa,GAAE;IAEE,WAAA,IAAA,cAAK,EAAC,UAAU,CAAC,CAAA;IAAoB,WAAA,IAAA,aAAI,GAAE,CAAA;;6CAAgB,+BAAa;;gDAEzF;AAKK;IAHL,IAAA,eAAM,EAAC,WAAW,CAAC;IACnB,IAAA,kBAAS,EAAC,6BAAY,CAAC;IAEN,WAAA,IAAA,cAAK,EAAC,UAAU,CAAC,CAAA;;;;gDAElC;yBA3CQ,cAAc;IAF1B,IAAA,mBAAU,EAAC,MAAM,CAAC;IAClB,IAAA,iBAAO,EAAC,cAAc,CAAC;qCAGc,0BAAW;GAFpC,cAAc,CA6C1B","sourcesContent":["import { Body, ConflictException, Controller, Delete, Get, HttpException, HttpStatus, Param, Patch, Post, UseGuards } from '@nestjs/common';\r\nimport { UserService } from './user.service';\r\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\r\nimport { CreateUserDto } from './dto/create-user.dto/create-user.dto';\r\nimport { User } from 'src/entities/user.entity/user.entity';\r\nimport { UpdateUserDto } from './dto/update-user.dto/update-user.dto';\r\nimport { JwtAwthGuard } from 'src/auth/jwt-auth.guard';\r\nimport { LocalAuthGuard } from 'src/auth/local-auth.guard';\r\n\r\n@Controller('User')\r\n@ApiTags('User Details')\r\nexport class UserController {\r\n    constructor(\r\n        private readonly userService: UserService\r\n    ){}\r\n    \r\n    @Post()\r\n    async create(@Body() createUserdto: CreateUserDto): Promise<User>{\r\n        try{\r\n            return this.userService.create(createUserdto);\r\n        }\r\n        catch (error){\r\n            if (error instanceof ConflictException) {\r\n                throw new HttpException('Username already exists', HttpStatus.CONFLICT);\r\n              }\r\n              throw error;\r\n            }\r\n    }\r\n    \r\n    @Get()\r\n    getAllusers(): Promise<User[]>{\r\n        return this.userService.getAllUsers();\r\n    }\r\n\r\n    @UseGuards(JwtAwthGuard)\r\n    @ApiBearerAuth()\r\n    @Get(':username')\r\n    async getUser(@Param('username') username: string): Promise<User> {\r\n        return this.userService.getUser(username);\r\n    }\r\n\r\n    @Patch(':username')\r\n    @UseGuards(JwtAwthGuard)\r\n    @ApiBearerAuth()\r\n    // @UseGuards(LocalAuthGuard)\r\n    async updateUser(@Param('username') username: string, @Body() updateUserDto: UpdateUserDto): Promise<User>{\r\n        return this.userService.updateUser(username, updateUserDto);\r\n    }\r\n\r\n    @Delete(':username')\r\n    @UseGuards(JwtAwthGuard)\r\n    // @UseGuards(LocalAuthGuard)\r\n    async deleteUser(@Param('username') username: string): Promise<void> {\r\n        return this.userService.deleteUser(username)\r\n    }\r\n\r\n}\r\n"]}