{"version":3,"file":"business.service.js","sourceRoot":"","sources":["../../../src/business/business.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tConflictException,\r\n\tInjectable,\r\n\tLogger,\r\n\tNotFoundException,\r\n} from \"@nestjs/common\";\r\nimport { InjectRepository } from \"@nestjs/typeorm\";\r\nimport { Business } from \"src/entities/business.entity/business.entity\";\r\nimport { Repository } from \"typeorm\";\r\nimport { CreateBusinessDto } from \"./dto/create-business.dto/create-business.dto\";\r\nimport { UpdateBusinessDto } from \"./dto/update-business.dto/update-business.dto\";\r\nimport { SharedService } from \"src/shared-service/shared-service.service\";\r\nimport {\r\n\tDataResponse,\r\n\tInvalidCredentialsResponse,\r\n\tNotFoundResponse,\r\n\tSuccessResponse,\r\n} from \"src/models/response.dto\";\r\nimport axios from \"axios\";\r\n\r\n@Injectable()\r\nexport class BusinessService {\r\n\tprivate readonly logger = new Logger(BusinessService.name);\r\n\tprivate readonly paystackUrl = process.env.PAYSTACK_URL;\r\n\tprivate readonly headers = {\r\n\t\tAuthorization: `Bearer ${process.env.PAYSTACK_SECRET_KEY}`,\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t};\r\n\r\n\tconstructor(\r\n\t\t@InjectRepository(Business)\r\n\t\tprivate businessRepo: Repository<Business>,\r\n\t\tprivate sharedService: SharedService\r\n\t) {}\r\n\r\n\tasync create(\r\n\t\tcreateBusinessDto: CreateBusinessDto\r\n\t): Promise<SuccessResponse | NotFoundResponse | InvalidCredentialsResponse> {\r\n\t\tif (!createBusinessDto) {\r\n\t\t\tthis.logger.error(\"Invalid business data provided\");\r\n\t\t\treturn new InvalidCredentialsResponse(\r\n\t\t\t\t\"Invalid business data provided\",\r\n\t\t\t\t\"Invalid Details\",\r\n\t\t\t\t400\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst user = await this.sharedService.findOneByEmail(\r\n\t\t\tcreateBusinessDto.email\r\n\t\t);\r\n\t\tthis.logger.log(\r\n\t\t\t`User fetched for email ${createBusinessDto.email}: ${JSON.stringify(\r\n\t\t\t\tuser\r\n\t\t\t)}`\r\n\t\t);\r\n\t\tif (!user || \"error\" in user) {\r\n\t\t\tthis.logger.error(`User with email ${createBusinessDto.email} not found`);\r\n\t\t\tthrow new NotFoundResponse(\r\n\t\t\t\t`User with email ${createBusinessDto.email} not found`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst foundUser = user instanceof DataResponse ? user.data : null;\r\n\t\tif (foundUser.userType !== \"VENDOR\") {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t`User with email ${createBusinessDto.email} is not registered as a business`\r\n\t\t\t);\r\n\t\t\treturn new InvalidCredentialsResponse(\r\n\t\t\t\t\"User is not registered as a business\",\r\n\t\t\t\t\"Invalid Role\",\r\n\t\t\t\t400\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst existingBusiness = await this.businessRepo.findOne({\r\n\t\t\twhere: { businessName: createBusinessDto.businessName },\r\n\t\t});\r\n\r\n\t\tif (existingBusiness) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t`Business with name ${createBusinessDto.businessName} already exists`\r\n\t\t\t);\r\n\t\t\tthrow new ConflictException(\r\n\t\t\t\t\"Business Already Exist, try another user or reset password\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.logger.log(\"Validating bank account details\");\r\n\t\tconst validBankAccount = await this.verifyAccount(\r\n\t\t\tcreateBusinessDto.bankAccountNumber,\r\n\t\t\tcreateBusinessDto.bank_code\r\n\t\t);\r\n\r\n\t\tif (validBankAccount instanceof InvalidCredentialsResponse) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t`Invalid bank account details provided: ${validBankAccount.message}`\r\n\t\t\t);\r\n\t\t\treturn validBankAccount;\r\n\t\t}\r\n\r\n\t\tthis.logger.log(\"Creating sub-account for business\");\r\n\t\tconst createSubAccountResponse = await this.createSubAccount(\r\n\t\t\tcreateBusinessDto.businessName,\r\n\t\t\tcreateBusinessDto.bank_code,\r\n\t\t\tcreateBusinessDto.bankAccountNumber,\r\n\t\t\tcreateBusinessDto.email\r\n\t\t);\r\n\t\tif (createSubAccountResponse instanceof NotFoundResponse) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t`Failed to create sub-account: ${createSubAccountResponse.message}`\r\n\t\t\t);\r\n\t\t\treturn createSubAccountResponse;\r\n\t\t}\r\n\r\n\t\tif (createSubAccountResponse instanceof InvalidCredentialsResponse) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t`Failed to create sub-account: ${createSubAccountResponse.message}`\r\n\t\t\t);\r\n\t\t\treturn createSubAccountResponse;\r\n\t\t}\r\n\t\tthis.logger.log(\r\n\t\t\t`Sub-account created successfully: ${JSON.stringify(\r\n\t\t\t\tcreateSubAccountResponse.data,\r\n\t\t\t\tnull,\r\n\t\t\t\t2\r\n\t\t\t)}`\r\n\t\t);\r\n\r\n\t\tconst business = this.businessRepo.create({\r\n\t\t\t...createBusinessDto,\r\n\t\t\tuserId: foundUser.id,\r\n\t\t\tbankName: createSubAccountResponse.data.data.settlement_bank,\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tawait this.businessRepo.save(business);\r\n\t\t} catch (error) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t`Error creating business: ${error.message}`,\r\n\t\t\t\terror.stack\r\n\t\t\t);\r\n\t\t\tthrow new ConflictException(\"Error creating business\");\r\n\t\t}\r\n\r\n\t\treturn new SuccessResponse(\"Business created successfully\", 200);\r\n\t}\r\n\r\n\tasync getAllBusiness(): Promise<DataResponse<Business[]>> {\r\n\t\tconst business = await this.businessRepo.find();\r\n\r\n\t\treturn new DataResponse<Business[]>(\r\n\t\t\tbusiness,\r\n\t\t\t\"All Businesses fetched successfully\",\r\n\t\t\t200\r\n\t\t);\r\n\t}\r\n\r\n\tasync getBusiness(\r\n\t\tname: string\r\n\t): Promise<DataResponse<Business> | NotFoundResponse> {\r\n\t\tconst business = await this.businessRepo.findOneBy({ businessName: name });\r\n\r\n\t\tif (!business) {\r\n\t\t\treturn new NotFoundResponse(`Business with id ${name} not found`);\r\n\t\t}\r\n\r\n\t\treturn new DataResponse<Business>(\r\n\t\t\tbusiness,\r\n\t\t\t\"Business fetched successfully\",\r\n\t\t\t200\r\n\t\t);\r\n\t}\r\n\r\n\tasync getAllBanks(): Promise<DataResponse<any> | NotFoundResponse> {\r\n\t\tthis.logger.log(\"Fetching all banks from Paystack\");\r\n\t\tthis.logger.log(\"Using Paystack URL:\", this.paystackUrl);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(`${this.paystackUrl}/bank`, {\r\n\t\t\t\theaders: this.headers,\r\n\t\t\t});\r\n\r\n\t\t\tif (response.data.status) {\r\n\t\t\t\tthis.logger.log(\"Banks fetched successfully from Paystack\");\r\n\t\t\t\tthis.logger.log(\r\n\t\t\t\t\t\"Response data Length:\",\r\n\t\t\t\t\tJSON.stringify(response.data.data.length)\r\n\t\t\t\t);\r\n\t\t\t\treturn new DataResponse(\r\n\t\t\t\t\tresponse.data.data,\r\n\t\t\t\t\t\"All Banks fetched successfully\",\r\n\t\t\t\t\t200\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.logger.error(\"Failed to fetch banks from Paystack\");\r\n\t\t\t\treturn new NotFoundResponse(\"Failed to fetch banks from Paystack\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.logger.error(`Error fetching banks: ${error.message}`);\r\n\t\t\treturn new NotFoundResponse(`Error fetching banks: ${error.message}`);\r\n\t\t}\r\n\t}\r\n\r\n\tasync updateBusiness(\r\n\t\tname: string,\r\n\t\tupdateBusinessdto: UpdateBusinessDto\r\n\t): Promise<Business> {\r\n\t\tconst business = await this.businessRepo.findOne({\r\n\t\t\twhere: { businessName: name },\r\n\t\t});\r\n\t\tif (!business) {\r\n\t\t\tthrow new NotFoundException(`Business with name ${name} not found`);\r\n\t\t}\r\n\t\tObject.assign(business, updateBusinessdto);\r\n\t\treturn this.businessRepo.save(business);\r\n\t}\r\n\r\n\tasync deleteBusiness(businessName: string): Promise<void> {\r\n\t\tawait this.businessRepo.delete(businessName);\r\n\t}\r\n\r\n\tasync verifyBusiness(\r\n\t\tid: string\r\n\t): Promise<SuccessResponse | NotFoundResponse> {\r\n\t\tconst business = await this.businessRepo.findOne({ where: { id } });\r\n\r\n\t\tif (!business) {\r\n\t\t\treturn new NotFoundResponse(`Business with id ${id} not found`);\r\n\t\t}\r\n\r\n\t\tbusiness.isVerified = true;\r\n\t\tbusiness.verificationDate = new Date();\r\n\r\n\t\tawait this.businessRepo.save(business);\r\n\t\treturn new SuccessResponse(\"Business verified successfully\", 200);\r\n\t}\r\n\r\n\tasync activateBusiness(\r\n\t\tid: string\r\n\t): Promise<SuccessResponse | NotFoundResponse> {\r\n\t\tconst business = await this.businessRepo.findOne({ where: { id } });\r\n\r\n\t\tif (!business) {\r\n\t\t\treturn new NotFoundResponse(`Business with id ${id} not found`);\r\n\t\t}\r\n\r\n\t\tbusiness.isActive = false;\r\n\t\tbusiness.modificationDate = null;\r\n\r\n\t\tawait this.businessRepo.save(business);\r\n\t\treturn new SuccessResponse(\"Business deactivated successfully\", 200);\r\n\t}\r\n\r\n\tasync deactivateBusiness(\r\n\t\tid: string\r\n\t): Promise<SuccessResponse | NotFoundResponse> {\r\n\t\tconst business = await this.businessRepo.findOne({ where: { id } });\r\n\r\n\t\tif (!business) {\r\n\t\t\treturn new NotFoundResponse(`Business with id ${id} not found`);\r\n\t\t}\r\n\r\n\t\tbusiness.isActive = false;\r\n\t\tbusiness.modificationDate = null;\r\n\r\n\t\tawait this.businessRepo.save(business);\r\n\t\treturn new SuccessResponse(\"Business deactivated successfully\", 200);\r\n\t}\r\n\r\n\tasync verifyAccount(\r\n\t\taccountNumber: string,\r\n\t\tbankCode: string\r\n\t): Promise<DataResponse<any> | NotFoundResponse> {\r\n\t\tthis.logger.log(\r\n\t\t\t`Verifying account with number ${accountNumber} and bank code ${bankCode}`\r\n\t\t);\r\n\r\n\t\tif (!accountNumber || !bankCode) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t\"Account number and bank code are required for verification\"\r\n\t\t\t);\r\n\t\t\treturn new NotFoundResponse(\"Account number and bank code are required\");\r\n\t\t}\r\n\r\n\t\tconst url = `${this.paystackUrl}/bank/resolve?account_number=${accountNumber}&bank_code=${bankCode}`;\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(url, { headers: this.headers });\r\n\t\t\tthis.logger.log(`Account verification response: ${response.data}`);\r\n\r\n\t\t\tif (response.data.status) {\r\n\t\t\t\treturn new DataResponse(\r\n\t\t\t\t\tresponse.data,\r\n\t\t\t\t\t\"Account verified successfully\",\r\n\t\t\t\t\t200\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn new NotFoundResponse(\"Account verification failed\");\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.logger.error(`${error}`);\r\n\t\t\tthis.logger.error(`Error verifying account: ${error.message}`);\r\n\t\t\tif (axios.isAxiosError(error)) {\r\n\t\t\t\tthis.logger.error(\"Axios error occurred\", error.message);\r\n\t\t\t\treturn new InvalidCredentialsResponse(\r\n\t\t\t\t\t\"Unabale to Verify User Account\",\r\n\t\t\t\t\terror.message,\r\n\t\t\t\t\t500\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tthis.logger.error(\"Unexpected error occurred\", error);\r\n\t\t\t\treturn new InvalidCredentialsResponse(\r\n\t\t\t\t\t\"Account Number Verification Failed failed\",\r\n\t\t\t\t\t\"An unexpected error occurred\",\r\n\t\t\t\t\t500\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync createSubAccount(\r\n\t\tbusiness_name: string,\r\n\t\tbank_code: string,\r\n\t\taccount_number: string,\r\n\t\tprimary_contact_email: string\r\n\t): Promise<\r\n\t\tDataResponse<any> | InvalidCredentialsResponse | NotFoundResponse\r\n\t> {\r\n\t\tthis.logger.log(\r\n\t\t\t`Creating sub-account for business ${business_name} with bank code ${bank_code} and account number ${account_number}`\r\n\t\t);\r\n\r\n\t\tif (!business_name || !bank_code || !account_number) {\r\n\t\t\tthis.logger.error(\r\n\t\t\t\t\"Business name, bank code, and account number are required\"\r\n\t\t\t);\r\n\t\t\treturn new NotFoundResponse(\r\n\t\t\t\t\"Business name, bank code, and account number are required\"\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst url = `${this.paystackUrl}/subaccount`;\r\n\t\tconst data = {\r\n\t\t\tbusiness_name,\r\n\t\t\tbank_code,\r\n\t\t\taccount_number,\r\n\t\t\tprimary_contact_email,\r\n\t\t\tpercentage_charge: 15,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post(url, data, { headers: this.headers });\r\n\t\t\tthis.logger.log(`Sub-account creation response: ${response.data}`);\r\n\r\n\t\t\tif (response.data.status) {\r\n\t\t\t\tthis.logger.log(\r\n\t\t\t\t\t`Sub-account for business ${business_name} created successfully`\r\n\t\t\t\t);\r\n\t\t\t\treturn new DataResponse(\r\n\t\t\t\t\tresponse.data,\r\n\t\t\t\t\t\"Sub-account created successfully\",\r\n\t\t\t\t\t200\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn new InvalidCredentialsResponse(\r\n\t\t\t\t\t\"Sub-account creation failed\",\r\n\t\t\t\t\t\"Unable to Create\",\r\n\t\t\t\t\t400\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.logger.error(`Error creating sub-account: ${error.message}`);\r\n\t\t\treturn new NotFoundResponse(\r\n\t\t\t\t`Error creating sub-account: ${error.message}`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"]}