{"version":3,"file":"business.controller.js","sourceRoot":"","sources":["../../../src/business/business.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tBody,\r\n\tConflictException,\r\n\tController,\r\n\tDelete,\r\n\tGet,\r\n\tHttpException,\r\n\tHttpStatus,\r\n\tParam,\r\n\tPatch,\r\n\tPost,\r\n} from \"@nestjs/common\";\r\nimport { ApiTags } from \"@nestjs/swagger\";\r\nimport { BusinessService } from \"./business.service\";\r\nimport { CreateBusinessDto } from \"./dto/create-business.dto/create-business.dto\";\r\nimport { Business } from \"src/entities/business.entity/business.entity\";\r\nimport { UpdateBusinessDto } from \"./dto/update-business.dto/update-business.dto\";\r\nimport {\r\n\tDataResponse,\r\n\tInvalidCredentialsResponse,\r\n\tNotFoundResponse,\r\n\tSuccessResponse,\r\n} from \"src/models/response.dto\";\r\n\r\n@Controller(\"Business\")\r\n@ApiTags(\"Business Details\")\r\nexport class BusinessController {\r\n\tconstructor(private readonly businessService: BusinessService) {}\r\n\r\n\t@Post(\"create\")\r\n\tasync create(\r\n\t\t@Body() createbusinessDto: CreateBusinessDto\r\n\t): Promise<SuccessResponse | NotFoundResponse | InvalidCredentialsResponse> {\r\n\t\ttry {\r\n\t\t\treturn this.businessService.create(createbusinessDto);\r\n\t\t} catch (error) {\r\n\t\t\tif (error instanceof ConflictException) {\r\n\t\t\t\tthrow new HttpException(\r\n\t\t\t\t\t\"Business Already Exist, try another or reset details\",\r\n\t\t\t\t\tHttpStatus.CONFLICT\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t@Get(\"all\")\r\n\tgetAllBusiness(): Promise<DataResponse<Business[]>> {\r\n\t\treturn this.businessService.getAllBusiness();\r\n\t}\r\n\r\n\t@Get(\":businessName\")\r\n\tasync getBusinessDetails(\r\n\t\t@Param(\"businessName\") businessName: string\r\n\t): Promise<DataResponse<Business> | NotFoundResponse> {\r\n\t\treturn this.businessService.getBusiness(businessName);\r\n\t}\r\n\r\n\t@Patch(\":businessName\")\r\n\tasync updateBusiness(\r\n\t\t@Param(\"businessName\") businessName: string,\r\n\t\t@Body() updateBusinessDto: UpdateBusinessDto\r\n\t): Promise<Business> {\r\n\t\treturn this.businessService.updateBusiness(businessName, updateBusinessDto);\r\n\t}\r\n\r\n\t@Delete(\":businessName\")\r\n\tasync deleteBusiness(\r\n\t\t@Param(\"businessName\") businessName: string\r\n\t): Promise<void> {\r\n\t\treturn this.businessService.deleteBusiness(businessName);\r\n\t}\r\n\r\n\t@Patch(\"verify-business/:id\")\r\n\tasync verifyBusiness(\r\n\t\t@Param(\"id\") id: string\r\n\t): Promise<SuccessResponse | NotFoundResponse> {\r\n\t\treturn this.businessService.verifyBusiness(id);\r\n\t}\r\n\r\n\t@Patch(\"activate-business/:id\")\r\n\tasync activateBusiness(\r\n\t\t@Param(\"id\") id: string\r\n\t): Promise<SuccessResponse | NotFoundResponse> {\r\n\t\treturn this.businessService.activateBusiness(id);\r\n\t}\r\n\r\n\t@Patch(\"deactivate-business/:id\")\r\n\tasync deactivateBusiness(\r\n\t\t@Param(\"id\") id: string\r\n\t): Promise<SuccessResponse | NotFoundResponse> {\r\n\t\treturn this.businessService.deactivateBusiness(id);\r\n\t}\r\n\r\n\t@Post(\"banks\")\r\n\tasync getAllBanks(): Promise<DataResponse<any> | NotFoundResponse> {\r\n\t\treturn this.businessService.getAllBanks();\r\n\t}\r\n}\r\n"]}