{"version":3,"file":"business.controller.js","sourceRoot":"","sources":["../../../src/business/business.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAAiI;AACjI,6CAA0C;AAC1C,yDAAqD;AACrD,uFAAkF;AAElF,uFAAkF;AAI3E,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC3B,YACqB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IACnD,CAAC;IAGG,AAAN,KAAK,CAAC,MAAM,CAAS,iBAAoC;QACrD,IAAG,CAAC;YACA,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC1D,CAAC;QACD,OAAM,KAAK,EAAC,CAAC;YACT,IAAG,KAAK,YAAY,0BAAiB,EAAC,CAAC;gBACnC,MAAM,IAAI,sBAAa,CAAC,sDAAsD,EAAE,mBAAU,CAAC,QAAQ,CAAC,CAAC;YACzG,CAAC;YACD,MAAM,KAAK,CAAC;QAChB,CAAC;IACL,CAAC;IAGD,cAAc;QACV,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC;IACjD,CAAC;IAGK,AAAN,KAAK,CAAC,kBAAkB,CAAwB,YAAmB;QAC/D,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1D,CAAC;IAGK,AAAN,KAAK,CAAC,cAAc,CAAwB,YAAmB,EAAU,iBAAoC;QACzG,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAA;IAC/E,CAAC;IAGK,AAAN,KAAK,CAAC,cAAc,CAAwB,YAAmB;QAC3D,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC7D,CAAC;CACJ,CAAA;AArCY,gDAAkB;AAMrB;IADL,IAAA,aAAI,GAAE;IACO,WAAA,IAAA,aAAI,GAAE,CAAA;;qCAAoB,uCAAiB;;gDAUxD;AAGD;IADC,IAAA,YAAG,GAAE;;;;wDAGL;AAGK;IADL,IAAA,YAAG,EAAC,eAAe,CAAC;IACK,WAAA,IAAA,cAAK,EAAC,cAAc,CAAC,CAAA;;;;4DAE9C;AAGK;IADL,IAAA,cAAK,EAAC,eAAe,CAAC;IACD,WAAA,IAAA,cAAK,EAAC,cAAc,CAAC,CAAA;IAAuB,WAAA,IAAA,aAAI,GAAE,CAAA;;6CAAoB,uCAAiB;;wDAE5G;AAGK;IADL,IAAA,eAAM,EAAC,eAAe,CAAC;IACF,WAAA,IAAA,cAAK,EAAC,cAAc,CAAC,CAAA;;;;wDAE1C;6BApCQ,kBAAkB;IAF9B,IAAA,mBAAU,EAAC,UAAU,CAAC;IACtB,IAAA,iBAAO,EAAC,kBAAkB,CAAC;qCAGc,kCAAe;GAF5C,kBAAkB,CAqC9B","sourcesContent":["import { Body, ConflictException, Controller, Delete, Get, HttpException, HttpStatus, Param, Patch, Post } from '@nestjs/common';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { BusinessService } from './business.service';\r\nimport { CreateBusinessDto } from './dto/create-business.dto/create-business.dto';\r\nimport { Business } from 'src/entities/business.entity/business.entity';\r\nimport { UpdateBusinessDto } from './dto/update-business.dto/update-business.dto';\r\n\r\n@Controller('Business')\r\n@ApiTags('Business Details')\r\nexport class BusinessController {\r\n    constructor(\r\n        private readonly businessService: BusinessService\r\n    ){}\r\n\r\n    @Post()\r\n    async create(@Body() createbusinessDto: CreateBusinessDto): Promise<Business>{\r\n        try{\r\n            return this.businessService.create(createbusinessDto);\r\n        }\r\n        catch(error){\r\n            if(error instanceof ConflictException){\r\n                throw new HttpException('Business Already Exist, try another or reset details', HttpStatus.CONFLICT);\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    @Get()\r\n    getAllBusiness(): Promise<Business[]>{\r\n        return this.businessService.getAllBusiness();\r\n    }\r\n\r\n    @Get(':businessName')\r\n    async getBusinessDetails(@Param('businessName') businessName:string): Promise<Business>{\r\n        return this.businessService.getBusiness(businessName);\r\n    }\r\n\r\n    @Patch(':businessName')\r\n    async updateBusiness(@Param('businessName') businessName:string, @Body() updateBusinessDto: UpdateBusinessDto): Promise<Business>{\r\n        return this.businessService.updateBusiness(businessName, updateBusinessDto)\r\n    }\r\n\r\n    @Delete(':businessName')\r\n    async deleteBusiness(@Param('businessName') businessName:string): Promise<void>{\r\n        return this.businessService.deleteBusiness(businessName);\r\n    }\r\n}\r\n"]}